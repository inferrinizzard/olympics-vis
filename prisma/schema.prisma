generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  country String @id @db.VarChar(3)
  name    String @db.VarChar(50)
  icon    String
  flag    String
  status  String

  country_medals     CountryMedals[]
  country_attendance CountryAttendance?
  medal_totals       MedalTotals[]

  @@map("country_detail")
}

model CountryAthletes {
  id               Int    @id @default(autoincrement())
  game             String @db.VarChar(30)
  country_athletes Json   @db.Json

  games_detail Games @relation(fields: [game], references: [game], onDelete: NoAction, onUpdate: NoAction, map: "fk_country_attendance_game")

  @@map("country_athletes")
}

model CountryAttendance {
  country String   @id @db.VarChar(3)
  games   String[]

  country_detail Country @relation(fields: [country], references: [country], onDelete: NoAction, onUpdate: NoAction, map: "fk_medal_totals_country")

  @@map("country_attendance")
}

model Games {
  game         String @id @db.VarChar(30)
  year         Int
  season       String @db.VarChar(6)
  title        String @db.VarChar(30)
  emblem       String
  host         String @db.VarChar(100)
  num_athletes Int
  start_date   String @db.VarChar(20)
  end_date     String @db.VarChar(20)

  country_athletes CountryAthletes[]
  country_medals   CountryMedals[]
  sports_events    SportsEvent[]

  @@map("games_detail")
}

model CountryMedals {
  game    String @db.VarChar(30)
  country String @db.VarChar(3)
  gold    Int    @default(0)
  silver  Int    @default(0)
  bronze  Int    @default(0)

  country_detail Country @relation(fields: [country], references: [country], onDelete: NoAction, onUpdate: NoAction, map: "fk_country_medals_country")
  games_detail   Games   @relation(fields: [game], references: [game], onDelete: NoAction, onUpdate: NoAction, map: "fk_country_medals_game")

  @@id([game, country])
  @@map("country_game_medals")
}

model MedalTotals {
  country String @db.VarChar(3)
  season  String @db.VarChar(6)
  gold    Int    @default(0)
  silver  Int    @default(0)
  bronze  Int    @default(0)

  country_detail Country @relation(fields: [country], references: [country], onDelete: NoAction, onUpdate: NoAction, map: "fk_medal_totals_country")

  @@id([country, season])
  @@map("country_medal_totals")
}

model Sport {
  sport String @id @db.VarChar(3)
  name  String @db.VarChar(50)
  icon  String

  @@map("sports_detail")
}

model SportsEvent {
  id     Int      @id @default(autoincrement())
  game   String   @db.VarChar(30)
  sport  String   @db.VarChar(3)
  event  String
  gold   String[]
  silver String[]
  bronze String[]

  games_detail Games @relation(fields: [game], references: [game], onDelete: NoAction, onUpdate: NoAction, map: "fk_sports_events_game")

  @@map("sports_events")
}
